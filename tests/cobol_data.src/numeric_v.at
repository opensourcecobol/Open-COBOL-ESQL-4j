AT_SETUP([numeric_v])

AT_DATA([prog.cbl], [
       IDENTIFICATION              DIVISION.
      ******************************************************************
       PROGRAM-ID.                 prog.
      ******************************************************************
       DATA                        DIVISION.
      ******************************************************************
       WORKING-STORAGE             SECTION.
       01 VV PIC 9(4)V9(2).
       01 VP PIC 9(4)PP.
       01 V PIC 9(4).

       01  TEST-DATA-V.
         03 FILLER       PIC 9(4)V9(2) VALUE 0.
         03 FILLER       PIC 9(4)V9(2) VALUE 0.01.
         03 FILLER       PIC 9(4)V9(2) VALUE 0.1.
         03 FILLER       PIC 9(4)V9(2) VALUE 1.01.
         03 FILLER       PIC 9(4)V9(2) VALUE 1.1.
         03 FILLER       PIC 9(4)V9(2) VALUE 2000.00.
         03 FILLER       PIC 9(4)V9(2) VALUE 2000.01.
         03 FILLER       PIC 9(4)V9(2) VALUE 1234.56.
         03 FILLER       PIC 9(4)V9(2) VALUE 1234.
         03 FILLER       PIC 9(4)V9(2) VALUE 9999.99.

       01  TEST-DATA-R-V   REDEFINES TEST-DATA-V.
         03  TEST-TBL-V    OCCURS  10.
           05  D-V             PIC 9(4)V9(2).

       01  TEST-DATA-P.
         03 FILLER       PIC 9(4)PP VALUE 0.
         03 FILLER       PIC 9(4)PP VALUE 100.
         03 FILLER       PIC 9(4)PP VALUE 200.
         03 FILLER       PIC 9(4)PP VALUE 3000.
         03 FILLER       PIC 9(4)PP VALUE 110000.
         03 FILLER       PIC 9(4)PP VALUE 123400.
         03 FILLER       PIC 9(4)PP VALUE 666600.
         03 FILLER       PIC 9(4)PP VALUE 777700.
         03 FILLER       PIC 9(4)PP VALUE 888800.
         03 FILLER       PIC 9(4)PP VALUE 999900.

       01  TEST-DATA-R-P   REDEFINES TEST-DATA-P.
         03  TEST-TBL-P    OCCURS  10.
           05  D-P             PIC 9(4)PP.

       01  TEST-DATA.
         03 FILLER       PIC 9(4) VALUE 0.
         03 FILLER       PIC 9(4) VALUE 1.
         03 FILLER       PIC 9(4) VALUE 2.
         03 FILLER       PIC 9(4) VALUE 10.
         03 FILLER       PIC 9(4) VALUE 20.
         03 FILLER       PIC 9(4) VALUE 100.
         03 FILLER       PIC 9(4) VALUE 200.
         03 FILLER       PIC 9(4) VALUE 1000.
         03 FILLER       PIC 9(4) VALUE 2000.
         03 FILLER       PIC 9(4) VALUE 9999.

       01  TEST-DATA-R   REDEFINES TEST-DATA.
         03  TEST-TBL    OCCURS  10.
           05  D             PIC 9(4).

       01  IDX                     PIC  S9(02).
       01 LOG-COUNT PIC 9999 VALUE 1.

       01 READ-DATA-TBL-V.
         03  READ-TBL-V    OCCURS  10.
           05  READ-DATA-V             PIC 9(4)V9(2).

       01 READ-DATA-TBL-P.
         03  READ-TBL-P    OCCURS  10.
           05  READ-DATA-P             PIC 9(4)PP.

       01 READ-DATA-TBL.
         03  READ-TBL    OCCURS  10.
           05  READ-DATA             PIC 9(4).

       EXEC SQL BEGIN DECLARE SECTION END-EXEC.
       01  DBNAME                  PIC  X(30) VALUE SPACE.
       01  USERNAME                PIC  X(30) VALUE SPACE.
       01  PASSWD                  PIC  X(10) VALUE SPACE.
       EXEC SQL END DECLARE SECTION END-EXEC.

       EXEC SQL INCLUDE SQLCA END-EXEC.
      ******************************************************************
       PROCEDURE                   DIVISION.
      ******************************************************************
       MAIN-RTN.
           
       PERFORM SETUP-DB.

      *    SHOW RESULT
           EXEC SQL
               SELECT FIELD INTO :READ-TBL-V FROM TESTTABLEV ORDER BY N
           END-EXEC.

           PERFORM VARYING IDX FROM 1 BY 1 UNTIL IDX > 10
               DISPLAY READ-DATA-V(IDX)
           END-PERFORM.

      *    SHOW RESULT
           EXEC SQL
               SELECT FIELD INTO :READ-TBL-P FROM TESTTABLEP ORDER BY N
           END-EXEC.

           PERFORM VARYING IDX FROM 1 BY 1 UNTIL IDX > 10
               DISPLAY READ-DATA-P(IDX)
           END-PERFORM.

      *    SHOW RESULT
           EXEC SQL
               SELECT FIELD INTO :READ-TBL FROM TESTTABLE ORDER BY N
           END-EXEC.

           PERFORM VARYING IDX FROM 1 BY 1 UNTIL IDX > 10
               DISPLAY READ-DATA(IDX)
           END-PERFORM.

       PERFORM CLEANUP-DB.

      *    END
           STOP RUN.

      ******************************************************************
       SETUP-DB.
      ******************************************************************

      *    SERVER
           MOVE  "<|DB_NAME|>@<|DB_HOST|>:<|DB_PORT|>"
             TO DBNAME.
           MOVE  "<|DB_USER|>"
             TO USERNAME.
           MOVE  "<|DB_PASSWORD|>"
             TO PASSWD.


           EXEC SQL
               CONNECT :USERNAME IDENTIFIED BY :PASSWD USING :DBNAME 
           END-EXEC.

           EXEC SQL
               DROP TABLE IF EXISTS TESTTABLEV
           END-EXEC.

           EXEC SQL
               DROP TABLE IF EXISTS TESTTABLEP
           END-EXEC.

           EXEC SQL
               DROP TABLE IF EXISTS TESTTABLE
           END-EXEC.

           EXEC SQL
                CREATE TABLE TESTTABLEV
                (
                    N         NUMERIC(2,0) NOT NULL,
                    FIELD     DECIMAL(6,2) NOT NULL
                )
           END-EXEC.

           EXEC SQL
                CREATE TABLE TESTTABLEP
                (
                    N         NUMERIC(2,0) NOT NULL,
                    FIELD     NUMERIC(6,0) NOT NULL
                )
           END-EXEC.

           EXEC SQL
                CREATE TABLE TESTTABLE
                (
                    N         NUMERIC(2,0) NOT NULL,
                    FIELD     NUMERIC(4,0) NOT NULL
                )
           END-EXEC.

      *    INSERT ROWS USING HOST VARIABLE
           PERFORM VARYING IDX FROM 1 BY 1 UNTIL IDX > 10
              MOVE D-V(IDX)     TO  VV
              EXEC SQL
                 INSERT INTO TESTTABLEV VALUES (:IDX, :VV)
              END-EXEC
           END-PERFORM.

      *    INSERT ROWS USING HOST VARIABLE
           PERFORM VARYING IDX FROM 1 BY 1 UNTIL IDX > 10
              MOVE D-P(IDX)     TO  VP
              EXEC SQL
                 INSERT INTO TESTTABLEP VALUES (:IDX, :VP)
              END-EXEC
           END-PERFORM.

      *    INSERT ROWS USING HOST VARIABLE
           PERFORM VARYING IDX FROM 1 BY 1 UNTIL IDX > 10
              MOVE D(IDX)     TO  V
              EXEC SQL
                 INSERT INTO TESTTABLE VALUES (:IDX, :V)
              END-EXEC
           END-PERFORM.

      *    COMMIT
           EXEC SQL
               COMMIT WORK
           END-EXEC.

      ******************************************************************
       CLEANUP-DB.
      ******************************************************************
           EXEC SQL
               DROP TABLE IF EXISTS TESTTABLEV
           END-EXEC.

           EXEC SQL
               DROP TABLE IF EXISTS TESTTABLEP
           END-EXEC.

           EXEC SQL
               DROP TABLE IF EXISTS TESTTABLE
           END-EXEC.

           EXEC SQL
               DISCONNECT ALL
           END-EXEC.


])
AT_CHECK([ocesql prog.cbl prog.cob], [0],
[precompile start: prog.cbl
=======================================================
              LIST OF CALLED DB Library API            @&t@
=======================================================
Generate:OCESQLExecSelectIntoOccurs
Generate:OCESQLExecSelectIntoOccurs
Generate:OCESQLExecSelectIntoOccurs
Generate:OCESQLConnect
Generate:OCESQLExec
Generate:OCESQLExec
Generate:OCESQLExec
Generate:OCESQLExec
Generate:OCESQLExec
Generate:OCESQLExec
Generate:OCESQLExecParams
Generate:OCESQLExecParams
Generate:OCESQLExecParams
Generate:COMMIT
Generate:OCESQLExec
Generate:OCESQLExec
Generate:OCESQLExec
Generate:OCESQLDisconnect
=======================================================
])
AT_CHECK([${EMBED_DB_INFO} prog.cob])
AT_CHECK([${COMPILE_MODULE} prog.cob])
AT_CHECK([${RUN_MODULE} prog], [0],
[0000.00
0000.01
0000.10
0001.01
0001.10
2000.00
2000.01
1234.56
1234.00
9999.99
000000
000100
000200
003000
110000
123400
666600
777700
888800
999900
0000
0001
0002
0010
0020
0100
0200
1000
2000
9999
])

AT_CLEANUP
