AT_SETUP([insert-select-update-delete])

AT_DATA([prog.cbl], [
       IDENTIFICATION              DIVISION.
      ******************************************************************
       PROGRAM-ID.                 prog.
      ******************************************************************
       DATA                        DIVISION.
      ******************************************************************
       WORKING-STORAGE             SECTION.
       01 READ-DATA.
         03  READ-TBL    OCCURS  1.
           05  READ-V PIC X(5).

       EXEC SQL BEGIN DECLARE SECTION END-EXEC.
       01 DATA-ID PIC 9(4).
       01 DATA-V PIC X(5).
       01  DBNAME                  PIC  X(30) VALUE SPACE.
       01  USERNAME                PIC  X(30) VALUE SPACE.
       01  PASSWD                  PIC  X(10) VALUE SPACE.
       EXEC SQL END DECLARE SECTION END-EXEC.

       EXEC SQL INCLUDE SQLCA END-EXEC.

      ******************************************************************
       PROCEDURE                   DIVISION.
      ******************************************************************
       MAIN-RTN.
           
       PERFORM SETUP-DB.

       EXEC SQL
         INSERT INTO TESTTABLE VALUES (1, 'hello')
       END-EXEC.
       PERFORM SHOW-STATUS.
       EXEC SQL COMMIT END-EXEC.

       EXEC SQL
         INSERT INTO TESTTABLE VALUES ('invalid', 'invalid')
       END-EXEC.
       PERFORM SHOW-STATUS.
       EXEC SQL COMMIT END-EXEC.

       EXEC SQL
         SELECT V INTO :READ-TBL FROM TESTTABLE
       END-EXEC.
       PERFORM SHOW-STATUS.
       EXEC SQL COMMIT END-EXEC.

       EXEC SQL
         SELECT V INTO :READ-TBL FROM TESTTABLEERROR
       END-EXEC.
       PERFORM SHOW-STATUS.
       EXEC SQL COMMIT END-EXEC.

       EXEC SQL
         UPDATE TESTTABLE SET V = 'world' WHERE ID = 1
       END-EXEC.
       PERFORM SHOW-STATUS.
       EXEC SQL COMMIT END-EXEC.

       EXEC SQL
         UPDATE TESTTABLE SET V = 'world' WHERE ID = 3
       END-EXEC.
       PERFORM SHOW-STATUS.
       EXEC SQL COMMIT END-EXEC.

       EXEC SQL
         UPDATE TESTTABLEERROR SET V = 'world' WHERE ID = 1
       END-EXEC.
       PERFORM SHOW-STATUS.
       EXEC SQL COMMIT END-EXEC.

       EXEC SQL
         DELETE FROM TESTTABLE WHERE ID = 1
       END-EXEC.
       PERFORM SHOW-STATUS.
       EXEC SQL COMMIT END-EXEC.

       EXEC SQL
         DELETE FROM TESTTABLE WHERE ID = 3
       END-EXEC.
       PERFORM SHOW-STATUS.
       EXEC SQL COMMIT END-EXEC.

       EXEC SQL
         DELETE FROM TESTTABLEERROR WHERE ID = 3
       END-EXEC.
       PERFORM SHOW-STATUS.
       EXEC SQL COMMIT END-EXEC.

       PERFORM CLEANUP-DB.

           STOP RUN.

      ******************************************************************
       SETUP-DB.
      ******************************************************************

           MOVE  "<|DB_NAME|>@<|DB_HOST|>:<|DB_PORT|>"
             TO DBNAME.
           MOVE  "<|DB_USER|>"
             TO USERNAME.
           MOVE  "<|DB_PASSWORD|>"
             TO PASSWD.

           EXEC SQL
               CONNECT :USERNAME IDENTIFIED BY :PASSWD USING :DBNAME 
           END-EXEC.

           EXEC SQL
               DROP TABLE IF EXISTS TESTTABLE
           END-EXEC.

           EXEC SQL
               CREATE TABLE TESTTABLE
               (
                 ID integer,
                 V  char(5)
               )
           END-EXEC.


      ******************************************************************
       CLEANUP-DB.
      ******************************************************************

           EXEC SQL
               DISCONNECT ALL
           END-EXEC.

      ******************************************************************
       SHOW-STATUS.
      ******************************************************************
           DISPLAY SQLCODE.
           DISPLAY SQLSTATE.

])

AT_CHECK([ocesql prog.cbl prog.cob], [0],
[precompile start: prog.cbl
=======================================================
              LIST OF CALLED DB Library API            @&t@
=======================================================
Generate:OCESQLExec
Generate:COMMIT
Generate:OCESQLExec
Generate:COMMIT
Generate:OCESQLExecSelectIntoOccurs
Generate:COMMIT
Generate:OCESQLExecSelectIntoOccurs
Generate:COMMIT
Generate:OCESQLExec
Generate:COMMIT
Generate:OCESQLExec
Generate:COMMIT
Generate:OCESQLExec
Generate:COMMIT
Generate:OCESQLExec
Generate:COMMIT
Generate:OCESQLExec
Generate:COMMIT
Generate:OCESQLExec
Generate:COMMIT
Generate:OCESQLConnect
Generate:OCESQLExec
Generate:OCESQLExec
Generate:OCESQLDisconnect
=======================================================
])
AT_CHECK([${EMBED_DB_INFO} prog.cob])
AT_CHECK([${COMPILE_MODULE} prog.cob])
AT_CHECK([${RUN_MODULE} prog], [0],
[+000000000
00000
-000009999
22P02
+000000000
00000
-000009999
42P01
+000000000
00000
+000000000
00000
-000009999
42P01
+000000000
00000
+000000000
00000
-000009999
42P01
])

AT_CLEANUP
